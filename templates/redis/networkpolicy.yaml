{{- $argo := (index .Values "argo-cd") -}}
{{- $redisHa := (index $argo "redis-ha") -}}
  {{- if and .Values.nholuongut.networkPolicy.create $argo.redis.enabled (not $redisHa.enabled) }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    {{- include "nholuongut.labels" (dict "context" . "component" .Values.redis.name "name" .Values.redis.name) | nindent 4 }}
  name: {{ template "argo-cd.redis.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
spec:
  ingress:
  - from:
    - podSelector:
        matchLabels:
              {{- include "nholuongut.agentSelectorLabels" (dict "context" . "name" .Values.agent.name) | nindent 10 }}
    - podSelector:
        matchLabels:
              {{- include "nholuongut.selectorLabels" (dict "context" . "name" .Values.repoServer.name) | nindent 10 }}
    - podSelector:
        matchLabels:
              {{- include "nholuongut.selectorLabels" (dict "context" . "name" .Values.controller.name) | nindent 10 }}
    ports:
    - port: redis
      protocol: TCP
  {{- if $argo.redis.metrics.enabled }}
  - from:
      - namespaceSelector: {}
    ports:
      - port: metrics
        protocol: TCP
  {{- end }}
  egress:
  - ports:
    - port: 53
      protocol: UDP
    - port: 53
      protocol: TCP
  podSelector:
    matchLabels:
      {{- include "nholuongut.selectorLabels" (dict "context" . "name" $argo.redis.name) | nindent 6 }}
  policyTypes:
  - Ingress
  - Egress
  {{- end }}
